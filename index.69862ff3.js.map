{"mappings":"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","sources":["src/js/localStorage.js","src/js/refs.js","src/js/modal_film.js","src/js/input.js","src/js/fetchMovieSearch.js","src/js/footer-modal.js","src/js/popular-films.js","src/js/spiner.js","src/js/pagination.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { onModalWindowOpen } from './modal_film';\nimport { refs } from './refs';\n\nconst modal = document.querySelector('.modal-film');\nconst modalFilmWatched = document.querySelector('.button-watched');\nconst modalFilmQueue = document.querySelector('.button-queue');\n\nmodalFilmWatched.addEventListener('click', onModalButtonsW);\nmodalFilmQueue.addEventListener('click', onModalButtonsQ);\n\nfunction onModalButtonsW(e) {\n  const film = JSON.parse(e.target.dataset.info);\n  console.log(e.target.dataset.info);\n\n  let saveWatch = localStorage.getItem('watch');\n  console.log(saveWatch);\n  if (saveWatch) {\n    saveWatch = JSON.parse(saveWatch);\n  } else {\n    saveWatch = [];\n  }\n  const isexist = saveWatch.find(el => el.id === film.id);\n\n  if (isexist) {\n    saveWatch = saveWatch.filter(el => el.id !== film.id);\n    refs.modalFilmWatched.textContent = 'ADD TO WATCH';\n    Notiflix.Notify.failure('Film remove from watch');\n  } else {\n    saveWatch.push(film);\n    refs.modalFilmWatched.textContent = 'REMOVE FROM WATCH';\n\n    Notiflix.Notify.success('Film add to watch');\n  }\n  localStorage.setItem('watch', JSON.stringify(saveWatch));\n}\n\nfunction onModalButtonsQ(e) {\n  const film = JSON.parse(e.target.dataset.info);\n  console.log(e);\n\n  let saveQueue = localStorage.getItem('queue');\n  console.log(saveQueue);\n  if (saveQueue) {\n    saveQueue = JSON.parse(saveQueue);\n  } else {\n    saveQueue = [];\n  }\n  const isexistQ = saveQueue.find(el => el.id === film.id);\n\n  if (isexistQ) {\n    saveQueue = saveQueue.filter(el => el.id !== film.id);\n    refs.modalFilmQueue.textContent = 'ADD TO QUEUE';\n    Notiflix.Notify.failure('Film remove from watch');\n  } else {\n    saveQueue.push(film);\n    refs.modalFilmQueue.textContent = 'REMOVE FROM QUEUE';\n    Notiflix.Notify.success('Film add to queue');\n  }\n  localStorage.setItem('queue', JSON.stringify(saveQueue));\n}\n\nexport { onModalButtonsW, onModalButtonsQ };\n","export const refs = {\n  modalFilmImg: document.querySelector('.modal__img'),\n  modalFilmTitle: document.querySelector('.modal-film__title'),\n  modalFilmVote: document.querySelector('.vote'),\n  modalFilmVotes: document.querySelector('.votes'),\n  modalFilmPopularity: document.querySelector('.popularity'),\n  modalFilmOrigTitle: document.querySelector('.orig-title'),\n  modalFilmGenre: document.querySelector('.genre'),\n  modalFilmDescription: document.querySelector('.about__text'),\n  modalFilmWatched: document.querySelector('.button-watched'),\n  modalFilmQueue: document.querySelector('.button-queue'),\n\n  //pagination\n  gallery: document.querySelector('.card'),\n  paginationList: document.querySelector('.pagination-mid'),\n  pageList: document.querySelector('.pages'),\n  lastBtn: document.getElementById('last-page'),\n  prevBtn: document.getElementById('button-prev'),\n  nextBtn: document.getElementById('button-next'),\n  firstPage: document.querySelector('.first'),\n  lastPage: document.querySelector('.last'),\n};\n","import { refs } from './refs';\nimport { API_KEY, BASE_URL } from './api-service';\nimport { Notify } from 'notiflix';\nimport { onModalButtonsW, onModalButtonsQ } from './localStorage';\n\nconst movieList = document.querySelector('.card');\nconst backdrop = document.querySelector('.backdrop');\nconst closeButton = document.querySelector('.close-button');\n\nmovieList.addEventListener('click', onModalWindowOpen);\ncloseButton.addEventListener('click', onModalWindowClose);\nbackdrop.addEventListener('click', onBackdropClick);\n\nfunction onModalWindowOpen(e) {\n  if (e.preventDefault(!e.target.closest('li'))) {\n    e.preventDefault()\n    return;\n  } else if (e.target.closest('li')) {\n    const filmId = e.target.closest('a').getAttribute('id');\n    requestFullInfo(filmId).then(data => fillingMurkup(data));\n\n    document.body.style.overflow = 'hidden';\n    backdrop.classList.remove('is-hidden');\n    document.addEventListener('keydown', onEscClose);\n  }\n}\n\nfunction onModalWindowClose() {\n  backdrop.classList.add('is-hidden');\n  document.body.style.overflow = 'visible';\n}\n\nfunction requestFullInfo(filmId) {\n  return fetch(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error();\n      }\n      return resp.json();\n    })\n    .catch(er =>\n      Notify.failure('Sorry, something goes wrong. Please, try again')\n    );\n}\n\nfunction fillingMurkup(obj) {\n  const genres = obj.genres.map(genre => genre.name).join(', ');\n\n  let saveWatch = localStorage.getItem('watch');\n  saveWatch = saveWatch ? JSON.parse(saveWatch) : [];\n  const isexist = saveWatch.find(el => el.id === obj.id);\n\n  let saveQueue = localStorage.getItem('queue');\n  saveQueue = saveQueue ? JSON.parse(saveQueue) : [];\n  const isexistQ = saveQueue.find(el => el.id === obj.id);\n\n  refs.modalFilmImg.src = `https://image.tmdb.org/t/p/w500/${obj.poster_path}`;\n  refs.modalFilmImg.alt = `${obj.title} poster`;\n  refs.modalFilmTitle.textContent = obj.title;\n  refs.modalFilmTitle.filmId = obj.id;\n  refs.modalFilmVote.textContent = obj.vote_average;\n  refs.modalFilmVotes.textContent = obj.vote_count;\n  refs.modalFilmPopularity.textContent = obj.popularity;\n  refs.modalFilmOrigTitle.textContent = obj.original_title;\n  refs.modalFilmDescription.textContent = obj.overview;\n  refs.modalFilmGenre.textContent = genres;\n  refs.modalFilmWatched.dataset.info = JSON.stringify(obj);\n  refs.modalFilmQueue.dataset.info = JSON.stringify(obj);\n  refs.modalFilmWatched.textContent = isexist\n    ? 'REMOVED FORM WATCHED'\n    : 'ADD TO WATCHED';\n  refs.modalFilmQueue.textContent = isexistQ\n    ? 'REMOVED FORM QUEUE'\n    : 'ADD TO QUEUE';\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onModalWindowClose();\n  }\n}\n\nfunction onEscClose(e) {\n  if (e.code === 'Escape') {\n    document.removeEventListener('keydown', onEscClose);\n    onModalWindowClose();\n  }\n}\n\nexport { onModalWindowOpen, onModalWindowClose, onBackdropClick, onEscClose };\n","import ApiServise from './fetchMovieSearch';\n// import toastr from 'toastr';\n// import refs from './refs';\n// console.log(toastr)\nconst apiServise = new ApiServise();\nconsole.log(apiServise);\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.container');\nconst input = document.querySelector('.search-form__input');\nconst btn = document.querySelector('.search-form__button');\n\n// console.log(btn)\nlet currentPage = 1;\nlet totalPages;\nconst pageRange = 2;\n// init();\n\nsearchForm.addEventListener('submit', onSearchForm);\n\nfunction match(arr) {\n  const IMG_PATH = 'https://image.tmdb.org/t/p/original/';\n  return arr.map(el => {\n    for (let i = 0; i < el.genre_ids.length; i++) {\n      if (findGenre(el.genre_ids[i])) {\n        el.genre_ids[i] = ` ${findGenre(el.genre_ids[i])}`;\n        if (el.genre_ids.length > 2) {\n          el.genre_ids.splice(2, 5, ' Other');\n        }\n      } else {\n        el.genre_ids[i] = ' Other genre';\n        if (el.genre_ids.length > 2) {\n          el.genre_ids.splice(2, 5, ' Other');\n        }\n      }\n    }\n    if (el.release_date) {\n      el.release_date = el.release_date.slice(0, 4);\n    } else if (el.first_air_date) {\n      el.release_date = el.first_air_date.slice(0, 4);\n    }\n    if (!el.original_title) {\n      el.original_title = el.name;\n    }\n    if (el.poster_path) {\n      el.poster_path = IMG_PATH + el.poster_path;\n    } else {\n      el.poster_path =\n        'https://w.zhinka.tv/templates/Default/dleimages/no_image.jpg';\n    }\n    return el;\n  });\n}\n\nfunction findGenre(el) {\n  const genresBD = [\n    { id: 28, name: 'Action' },\n    { id: 12, name: 'Adventure' },\n    { id: 16, name: 'Animation' },\n    { id: 35, name: 'Comedy' },\n    { id: 80, name: 'Crime' },\n    { id: 99, name: 'Documentary' },\n    { id: 18, name: 'Drama' },\n    { id: 10751, name: 'Family' },\n    { id: 14, name: 'Fantasy' },\n    { id: 36, name: 'History' },\n    { id: 27, name: 'Horror' },\n    { id: 10402, name: 'Music' },\n    { id: 9648, name: 'Mystery' },\n    { id: 10749, name: 'Romance' },\n    { id: 878, name: 'Science Fiction' },\n    { id: 10770, name: 'TV Movie' },\n    { id: 53, name: 'Thriller' },\n    { id: 10752, name: 'War' },\n    { id: 37, name: 'Western' },\n  ];\n  let result;\n\n  genresBD.forEach(genre => {\n    if (el == genre.id) {\n      result = genre.name;\n    }\n  });\n\n  return result;\n}\n\nfunction onSearchForm(e) {\n  e.preventDefault();\n  apiServise.query = e.currentTarget.elements.query.value;\n\n  if (apiServise.query.trim() === '') {\n    return toastr.warning('Пожалуйста, введите ваш запроc');\n  }\n\n  clearGallery();\n  clearInput(e);\n  refs.pageList.innerHTML = '';\n\n  refs.preloader.classList.remove('done');\n  apiServise.resetPage();\n  currentPage = 1;\n  searchFetch(); //  отрисовка страницы по результату поиска\n}\n\nfunction clearGallery() {\n  refs.gallery.innerHTML = '';\n}\n\n//ф-ция для очистки инпута\nfunction clearInput(e) {\n  e.currentTarget.elements.query.value = '';\n}\n\n//ф-ция для рендеринга данных в галлерею\nfunction renderMarkup(results) {\n  const destrResults = destructArray(results);\n  refs.gallery.insertAdjacentHTML('beforeend', movieMarkup(destrResults));\n}\nfunction destructArray(arr) {\n  return arr.map(\n    ({\n      first_air_date,\n      id,\n      name,\n      backdrop_path,\n      original_title,\n      genre_ids,\n      poster_path,\n      release_date,\n    }) => ({\n      first_air_date,\n      id,\n      name,\n      backdrop_path,\n      original_title,\n      genre_ids,\n      poster_path,\n      release_date,\n      dataMovie: JSON.stringify({\n        first_air_date,\n        id,\n        name,\n        backdrop_path,\n        original_title,\n        genre_ids,\n        poster_path,\n        release_date,\n      }),\n    })\n  );\n}\n\nfunction preloader() {\n  if (!refs.preloader.classList.contains('done')) {\n    refs.preloader.classList.add('done');\n  }\n}\nfunction searchFetch() {\n  //  обработка ответа API по результату поиска и отрисовка страницы\n  apiServise\n    .fetchMoviesByRequest()\n    .then(data => {\n      totalPages = data.total_pages;\n      refs.lastBtn.textContent = totalPages;\n      // console.log(data)\n      init();\n      return data.results;\n    })\n    .then(results => {\n      if (results.length < 1) {\n        toastr.error('Фильм не найден! Измените ввод и повторите попытку');\n        apiServise.query = '';\n        fetchGall();\n      }\n      renderMarkup(match(destructArray(results)));\n      setTimeout(preloader, 200);\n    })\n\n    .catch(error => console.log(error));\n}\nfunction fetchGall() {\n  apiServise\n    .fetchPopularMovies()\n    .then(data => {\n      totalPages = data.total_pages;\n      refs.lastBtn.textContent = totalPages;\n      // console.log(data)\n      init();\n      return data.results;\n    })\n    .then(results => {\n      renderMarkup(match(destructArray(results)));\n      setTimeout(preloader, 200);\n    })\n\n    .catch(error => console.log(error));\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cf7103a04560136cfec7834a7d0f8600';\n\nexport default class ApiServise {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n  }\n\n  fetchPopularMovies() {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${this.page}`;\n    return fetch(url).then(response => response.json());\n    // .then(({ results }) => {\n    //   return results;\n    // });\n  }\n\n  fetchMoviesByRequest() {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${this.searchQuery}&page=${this.page}&include_adult=false`;\n    return fetch(url).then(response => response.json());\n    // .then(({ results }) => {\n    //   this.incrementPage();\n    //   return results;\n    // });\n  }\n\n  fetchMovieDetails(movieId) {\n    const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      });\n    // .then(data => ({\n    //   data\n    // })).then(({ data }) => {\n    //   console.log({data})\n    //   return data\n    // })\n  }\n  // Поиск видео с ютуба\n  fatchTrailerSearch(movieId) {\n    const url = `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      });\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  clearInput() {\n    this.searchQuery.innerHTML = '';\n  }\n\n  pagination(el) {\n    this.page = el;\n  }\n}\n","const refs = {\n  openFooterModal: document.querySelector('[data-action=\"open-lightbox\"]'),\n  closeFooterModal: document.querySelector('[data-action=\"close-lightbox\"]'),\n  lightboxFooterModal: document.querySelector('.js-lightbox'),\n  backdropClick: document.querySelector('.lightbox'),\n  body: document.querySelector('body'),\n};\n\n//------------------відкриття модалки--------------------------\nrefs.openFooterModal.addEventListener('click', onOpenModal);\n\nfunction onOpenModal() {\n  window.addEventListener('keydown', onEscClick); // додавання слухача події на Esc\n  refs.lightboxFooterModal.classList.remove('visually-hidden');\n  refs.body.classList.add('on-scroll'); //блокування скролу\n}\n//-----------------закриття модалки через кнопку----------------\nrefs.closeFooterModal.addEventListener('click', onCloseModal);\n\nfunction onCloseModal() {\n  window.removeEventListener('keydown', onEscClick); //зняття слухача події на Esc\n  refs.lightboxFooterModal.classList.add('visually-hidden');\n  refs.body.classList.remove('on-scroll'); // зняття блокування скролу\n}\n//-------------закриття через бекдроп--------------------------\nrefs.backdropClick.addEventListener('click', onBackdropClick);\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModal();\n    refs.body.classList.remove('on-scroll');\n  }\n}\n//--------закриття через Esc----------------------------------\nfunction onEscClick(event) {\n  const ESC_KEY_CODE = 'Escape';\n  if (event.code === ESC_KEY_CODE) {\n    onCloseModal();\n    refs.body.classList.remove('on-scroll');\n  }\n}\n","const cardList = document.querySelector('.card');\nconst URL =\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=177f83f5259c7f846e561f4715bd03a4';\n\nconst URLgenre =\n  'https://api.themoviedb.org/3/genre/movie/list?api_key=177f83f5259c7f846e561f4715bd03a4&language=en-US';\n\nlet genreIdArr;\n\nfunction fetchGenres() {\n  return fetch(URLgenre).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nfunction getGenre(genre_ids) {\n  let genreName = [];\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n  return genreName;\n}\n\nfetchGenres()\n  .then(genreId => {\n    genreIdArr = genreId.genres;\n    return genreIdArr;\n    //console.log(genreIdArr)\n  })\n  .catch(error => console.log(error));\n\nfunction fetchPopular() {\n  return fetch(URL).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nexport default function renderList(films) {\n  films.results.map(film => {\n    let year = new Date(film.release_date);\n    let yearRelease = year.getFullYear();\n    let genre_ids = film.genre_ids;\n\n    let genres = getGenre(genre_ids);\n\n    return (cardList.innerHTML += `<li class=\"card__item item\">\n\n                  <a class=\"card__link link\" href=\"#\" id=\"${film.id}\" data-id=\"${film.id}\" data-film-open>\n                    <div class=\"card__thumb\">\n                      <img class=\"card__img\"                      \n                        sizes=\"(min-width: 1200px) 370px, (min-width: 768px) 354px, (max-width: 767px) 450px, 100vw\"\n                        src='https://www.themoviedb.org/t/p/w500/${film.poster_path}'\n                        alt=\"tehnocryak\"\n                        width=\"100%\"\n                        class=\"card__img\"\n                      />\n                    </div>\n                    <div class=\"card__meta\">\n                      <h2 class=\"card__title\">${film.original_title}</h2>\n                      <p class=\"card__info\">${genres} | ${yearRelease}</p>\n                    </div>\n                  </a>\n                </li>`);\n  });\n}\n\n// function markupPopular() {\n//   fetchPopular()\n//     .then((films) => renderList(films))\n//     .catch((error) => console.log(error));\n// }\n\n// markupPopular();\n","window.onload = function () {\n  document.body.classList.add('loaded_hiding');\n  window.setTimeout(function () {\n    document.body.classList.add('loaded');\n    document.body.classList.remove('loaded_hiding');\n  }, 500);\n};\n","import renderList from './popular-films';\nimport { refs } from './refs';\nimport { API_KEY } from './api-service';\nimport { BASE_URL } from './api-service';\n\nclass ApiServise {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n  }\n\n  fetchPopularMovies() {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${this.page}`;\n    return fetch(url).then(response => response.json());\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  clearInput() {\n    this.searchQuery.innerHTML = '';\n  }\n\n  pagination(el) {\n    this.page = el;\n  }\n}\n\nconst apiServise = new ApiServise();\n\nlet currentPage = 1;\nlet totalPages;\nconst pageRange = 2;\n\nfunction fetchGall() {\n  apiServise\n    .fetchPopularMovies()\n    .then(data => {\n      totalPages = data.total_pages;\n      refs.lastBtn.textContent = totalPages;\n\n      init();\n      renderList(data);\n    })\n    .catch(error => console.log(error));\n}\n\nrefs.paginationList.addEventListener('click', onBtnClick);\nrefs.prevBtn.addEventListener('click', onPrevBtnClick);\nrefs.nextBtn.addEventListener('click', onNextBtnClick);\n\nfunction onBtnClick(evt) {\n  evt.preventDefault();\n\n  if (evt.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  refs.gallery.innerHTML = '';\n  refs.pageList.innerHTML = '';\n\n  currentPage = Number(evt.target.textContent);\n  apiServise.pagination(currentPage);\n\n  if (apiServise.query) {\n    searchFetch();\n  } else {\n    fetchGall();\n  }\n}\n\nfunction onPrevBtnClick(evt) {\n  evt.preventDefault();\n\n  if (currentPage > 1) {\n    currentPage -= 1;\n  }\n  refs.gallery.innerHTML = '';\n  refs.pageList.innerHTML = '';\n  apiServise.pagination(currentPage);\n\n  if (apiServise.query) {\n    searchFetch();\n  } else {\n    fetchGall();\n  }\n}\n\nfunction onNextBtnClick(evt) {\n  evt.preventDefault();\n\n  if (currentPage !== totalPages) {\n    currentPage += 1;\n  }\n  refs.gallery.innerHTML = '';\n  refs.pageList.innerHTML = '';\n  apiServise.pagination(currentPage);\n\n  if (apiServise.query) {\n    searchFetch();\n  } else {\n    fetchGall();\n  }\n}\n\nfunction renderPagesList() {\n  const start = currentPage - pageRange;\n  const end = currentPage + pageRange;\n\n  for (let i = start; i <= end; i += 1) {\n    if (i > 0 && i <= totalPages) {\n      refs.pageList.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pages-item\"><button type=\"button\" class=\"pagination-btn\">${i}</button></li>`\n      );\n    }\n  }\n}\n\nfunction hideFirstLastBtn() {\n  currentPage < 4\n    ? (refs.firstPage.hidden = true)\n    : (refs.firstPage.hidden = false);\n  currentPage > totalPages - 3\n    ? (refs.lastPage.hidden = true)\n    : (refs.lastPage.hidden = false);\n}\n\nfunction checkBtnOpacity() {\n  currentPage === 1\n    ? (refs.prevBtn.disabled = true)\n    : (refs.prevBtn.disabled = false);\n  currentPage === totalPages\n    ? (refs.nextBtn.disabled = true)\n    : (refs.nextBtn.disabled = false);\n}\n\nfunction makeActiveBtn() {\n  let pagesMenu = refs.pageList.querySelectorAll('button');\n  for (let i = 0; i < pagesMenu.length; i += 1) {\n    if (Number(pagesMenu[i].textContent) === currentPage) {\n      pagesMenu[i].classList.add('active-btn');\n    }\n  }\n}\n\nfunction init() {\n  checkBtnOpacity();\n  hideFirstLastBtn();\n  renderPagesList();\n  makeActiveBtn();\n}\n\napiServise.pagination(currentPage);\nfetchGall();\n"],"names":["$eWCmQ","parcelRequire","$ee27a4d7c64fc8c4$export$21666b427502ea6d","modalFilmImg","document","querySelector","modalFilmTitle","modalFilmVote","modalFilmVotes","modalFilmPopularity","modalFilmOrigTitle","modalFilmGenre","modalFilmDescription","modalFilmWatched","modalFilmQueue","gallery","paginationList","pageList","lastBtn","getElementById","prevBtn","nextBtn","firstPage","lastPage","$08d119c81b5e7d0e$var$movieList","$08d119c81b5e7d0e$var$backdrop","$08d119c81b5e7d0e$var$closeButton","$08d119c81b5e7d0e$export$518d3e6effb6482","classList","add","body","style","overflow","$08d119c81b5e7d0e$export$1dcae825a987e74e","e","code","removeEventListener","addEventListener","preventDefault","target","closest","filmId","fetch","then","resp","ok","Error","json","catch","er","Notify","failure","$08d119c81b5e7d0e$var$requestFullInfo","getAttribute","data","obj","genres","map","genre","name","join","saveWatch","localStorage","getItem","JSON","parse","isexist","find","el","id","saveQueue","isexistQ","src","poster_path","alt","title","textContent","vote_average","vote_count","popularity","original_title","overview","dataset","info","stringify","$08d119c81b5e7d0e$var$fillingMurkup","remove","currentTarget","$2338c8cd734f85a6$var$modalFilmWatched","$2338c8cd734f85a6$var$modalFilmQueue","film","console","log","filter","$parcel$interopDefault","push","success","setItem","$435b5a48e337b0ec$var$apiServise","fetchPopularMovies","url","this","page","response","fetchMoviesByRequest","searchQuery","fetchMovieDetails","movieId","fatchTrailerSearch","incrementPage","resetPage","query","newQuery","clearInput","innerHTML","pagination","constructor","$435b5a48e337b0ec$var$searchForm","$435b5a48e337b0ec$var$totalPages","$435b5a48e337b0ec$var$currentPage","$435b5a48e337b0ec$var$match","arr","i","genre_ids","length","$435b5a48e337b0ec$var$findGenre","splice","release_date","slice","first_air_date","result","forEach","$435b5a48e337b0ec$var$renderMarkup","results","destrResults","$435b5a48e337b0ec$var$destructArray","refs","insertAdjacentHTML","movieMarkup","backdrop_path","dataMovie","$435b5a48e337b0ec$var$preloader","preloader","contains","elements","value","trim","toastr","warning","$435b5a48e337b0ec$var$clearInput","total_pages","init","error","setTimeout","$4e12c0f0297ad96a$var$refs","openFooterModal","closeFooterModal","lightboxFooterModal","backdropClick","$4e12c0f0297ad96a$var$onCloseModal","window","$4e12c0f0297ad96a$var$onEscClick","event","$ed081d1e17bb4577$var$cardList","$ed081d1e17bb4577$var$genreIdArr","$ed081d1e17bb4577$export$2e2bcd8739ae039","films","yearRelease","Date","getFullYear","genreName","genre_id","$ed081d1e17bb4577$var$getGenre","responce","statusText","genreId","onload","$1bab9c519cfa82bc$var$apiServise","$1bab9c519cfa82bc$var$totalPages","$1bab9c519cfa82bc$var$currentPage","$1bab9c519cfa82bc$var$fetchGall","disabled","hidden","end","$1bab9c519cfa82bc$var$renderPagesList","pagesMenu","querySelectorAll","Number","$1bab9c519cfa82bc$var$makeActiveBtn","evt","nodeName","searchFetch"],"version":3,"file":"index.69862ff3.js.map"}