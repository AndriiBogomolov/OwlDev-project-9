{"mappings":"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","sources":["src/js/refs.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/api-service.js","src/js/modal_film.js","src/js/popular-films.js","src/js/spiner.js"],"sourcesContent":["export const refs = {\n\tfilm: document.querySelector(\"#id\"),\n\tmodalOpen: document.querySelector(\"[data-film-open]\"),\n\tmodalClose: document.querySelector(\"[data-film-close]\"),\n\tmodal: document.querySelector(\"[data-film]\"),\n\tmodalFilmImg: document.querySelector(\".modal__img\"),\n\tmodalFilmTitle: document.querySelector(\".modal__title\"),\n\tmodalFilmVote: document.querySelector(\".vote\"),\n\tmodalFilmVotes: document.querySelector(\".votes\"),\n\tmodalFilmPopularity: document.querySelector(\".popularity\"),\n\tmodalFilmOrigTitle: document.querySelector(\".orig-title\"),\n\tmodalFilmGenre: document.querySelector(\".genre\"),\n\tmodalFilmDescription: document.querySelector(\".about__text\"),\n};  ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","//const API_KEY = '177f83f5259c7f846e561f4715bd03a4';\n//const BASE_URL = 'https://api.themoviedb.org/3';\n\n//export { API_KEY, BASE_URL };\n\n// import axios from 'axios';\n\n// const API_KEY = 'e52c7d8699df589ec79fa44e6b7f6a0c';\n// const BASE_URL = 'https://api.themoviedb.org';\n\n// export default class FilmotekaApiService {\n//     constructor() {\n//         this.searchQuery = '';\n//         this.page = 1;\n//     }\n\n//     fetch() {\n//         const url = `${BASE_URL}3/search/movie?api_key=${API_KEY}&query=Jack + Reacher`;\n//         return url\n//             .get(url)\n//             .then(function (response) {\n//                 console.log(response.json)\n//                 return response.json();\n//             })\n//             .then(({ object }) => {\n//                 this.incrementPage();\n//                 return { object };\n//             })\n//             .catch(error => console.log(error));\n\n//     }\n\n//     incrementPage() {\n//         this.page += 1;\n//     }\n\n//     resetPage() {\n//         this.page = 1;\n//     }\n\n//     get query() {\n//         return this.searchQuery;\n//     }\n\n//     set query(newQuery) {\n//         this.searchQuery = newQuery;\n//     }\n\n// }\n\nconst API_KEY = '177f83f5259c7f846e561f4715bd03a4';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nexport { API_KEY, BASE_URL };\n\nexport default class ApiServise {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n  }\n  fetchMoviesByRequest() {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${this.searchQuery}&page=${this.page}&include_adult=false`;\n    return fetch(url).then(response => response.json());\n    // console\n    //   .log(fetchMoviesByRequest())\n\n    //   .then(({ results }) => {\n    //     this.incrementPage();\n\n    //     return results;\n    //   });\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  clearInput() {\n    this.searchQuery.innerHTML = '';\n  }\n}\n\nlet currentPage = 1;\nlet totalPages;\nconst pageRange = 2;\n\ninit();\nrefs.searchForm.addEventListener('submit', onSearchForm);\n","// import { Notify } from 'notiflix';\nimport { refs } from './refs';\nimport { BASE_URL } from './api-service';\nimport { API_KEY } from './api-service';\n\n(() => {\n  refs.modalOpen.forEach(link => {\n    link.addEventListener('click', toggleModal);\n  });\n  refs.modalClose.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    document.body.classList.toggle('film-open');\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n\nrefs.modalOpen.addEventListener('click', onModalOpen);\n\nfunction onModalOpen(evt) {\n  const data = requestFullInfo().then(data => fillingMurkup(data));\n}\n\nfunction requestFullInfo() {\n  const filmId = refs.film.getAttribute(id);\n  return fetch(`${BASE_URL}/${filmId}?api_key=${API_KEY}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error();\n      }\n      return resp.json();\n    })\n    .catch(er =>\n      Notify.failure('Sorry, something goes wrong. Please, try again')\n    );\n}\n\nfunction fillingMurkup(obj) {\n  const genres = obj.genres.map(genre => genre.name).join(', ');\n\n  refs.modalFilmImg.src = `https://image.tmdb.org/t/p/w500/${obj.poster_path}`;\n  refs.modalFilmImg.alt = `${obj.title} poster`;\n  refs.modalFilmTitle.textContent = obj.title;\n  refs.modalFilmVote.textContent = obj.vote_average;\n  refs.modalFilmVotes.textContent = obj.vote_count;\n  refs.modalFilmPopularity.textContent = obj.popularity;\n  refs.modalFilmOrigTitle.textContent = obj.original_title;\n  refs.modalFilmDescription.textContent = obj.overview;\n  refs.modalFilmGenre.textContent = genres;\n}\n","const cardList = document.querySelector('.card');\nconst URL =\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=177f83f5259c7f846e561f4715bd03a4';\n\nconst URLgenre =\n  'https://api.themoviedb.org/3/genre/movie/list?api_key=177f83f5259c7f846e561f4715bd03a4&language=en-US';\n\nfunction fetchGenres() {\n  return fetch(URLgenre).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nfunction getGenre(genre_ids) {\n  let genreName = [];\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n  return genreName;\n}\n\nfetchGenres()\n  .then(genreId => {\n    genreIdArr = genreId.genres;\n    //console.log(genreIdArr)\n  })\n  .catch(error => console.log(error));\n\nfunction fetchPopular() {\n  return fetch(URL).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nfunction renderList(films) {\n  films.results.map(film => {\n    let year = new Date(film.release_date);\n    let yearRelease = year.getFullYear();\n    genre_ids = film.genre_ids;\n\n    let genres = getGenre(genre_ids);\n    return (cardList.innerHTML += `<li class=\"card__item item\">\n                  <a class=\"card__link link\" href=\"#\" data-modal-open>\n                  <div class=\"card__thumb\">\n                  <img class=\"card__img\"\n                    sizes=\"(min-width: 1280px) 370px, (min-width: 768px) 354px, (max-width: 767px) 450px, 100vw\"\n                    src='https://www.themoviedb.org/t/p/w500/${film.poster_path}'\n                    alt=\"tehnocryak\"\n                    width=\"100%\"\n                  />\n                </div>\n                <div class=\"card__meta\">\n                  <h2 class=\"card__title\">${film.original_title}</h2>\n                  <p class=\"card__info\">${genres} | ${yearRelease}</p>\n                </div>\n              </a>\n            </li>`);\n  });\n}\n\nfunction markupPopular() {\n  fetchPopular()\n    .then(films => renderList(films))\n    .catch(error => console.log(error));\n}\n\nmarkupPopular();\n","\n  window.onload = function () {\n    document.body.classList.add('loaded_hiding');\n    window.setTimeout(function () {\n      document.body.classList.add('loaded');\n      document.body.classList.remove('loaded_hiding');\n    }, 500);\n  }\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","film","document","querySelector","modalOpen","modalClose","modal","modalFilmImg","modalFilmTitle","modalFilmVote","modalFilmVotes","modalFilmPopularity","modalFilmOrigTitle","modalFilmGenre","modalFilmDescription","Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$0ed9756ae2b68474$export$a9861bd62f48e142","$0ed9756ae2b68474$export$ca6dda5263526f75","init","refs","searchForm","addEventListener","onSearchForm","toggleModal","body","classList","toggle","forEach","link","evt","filmId","getAttribute","id","fetch","concat","then","resp","ok","Error","json","catch","er","Notify","failure","data","genres","obj","map","genre","name","join","src","poster_path","alt","title","textContent","vote_average","vote_count","popularity","original_title","overview","$93b3c371a234ec36$var$cardList","$93b3c371a234ec36$var$renderList","films","results","yearRelease","Date","release_date","getFullYear","genre_ids","genreName","genre_id","push","genreIdArr","find","$93b3c371a234ec36$var$getGenre","innerHTML","responce","statusText","genreId","error","console","log","window","onload","add","setTimeout","remove"],"version":3,"file":"index.7630d8eb.js.map"}