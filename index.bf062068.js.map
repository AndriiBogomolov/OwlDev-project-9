{"mappings":"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","sources":["src/js/popular-films.js","src/js/spiner.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/pagination.js"],"sourcesContent":["const cardList = document.querySelector('.card');\nconst URL =\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=177f83f5259c7f846e561f4715bd03a4';\n\nconst URLgenre =\n  'https://api.themoviedb.org/3/genre/movie/list?api_key=177f83f5259c7f846e561f4715bd03a4&language=en-US';\n\nlet genreIdArr;\n\nfunction fetchGenres() {\n  return fetch(URLgenre).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nfunction getGenre(genre_ids) {\n  let genreName = [];\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n  return genreName;\n}\n\nfetchGenres()\n  .then(genreId => {\n    genreIdArr = genreId.genres;\n    return genreIdArr;\n    //console.log(genreIdArr)\n  })\n  .catch(error => console.log(error));\n\nfunction fetchPopular() {\n  return fetch(URL).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nexport default function renderList(films) {\n  films.results.map(film => {\n    let year = new Date(film.release_date);\n    let yearRelease = year.getFullYear();\n    let genre_ids = film.genre_ids;\n\n    let genres = getGenre(genre_ids);\n\n    return (cardList.innerHTML += `<li class=\"card__item item\">\n\n                  <a class=\"card__link link\" href=\"#\" id=\"${film.id}\" data-id=\"${film.id}\" data-film-open>\n                    <div class=\"card__thumb\">\n                      <img class=\"card__img\"                      \n                        sizes=\"(min-width: 1200px) 370px, (min-width: 768px) 354px, (max-width: 767px) 450px, 100vw\"\n                        src='https://www.themoviedb.org/t/p/w500/${film.poster_path}'\n                        alt=\"tehnocryak\"\n                        width=\"100%\"\n                        class=\"card__img\"\n                      />\n                    </div>\n                    <div class=\"card__meta\">\n                      <h2 class=\"card__title\">${film.original_title}</h2>\n                      <p class=\"card__info\">${genres} | ${yearRelease}</p>\n                    </div>\n                  </a>\n                </li>`);\n  });\n}\n\n// function markupPopular() {\n//   fetchPopular()\n//     .then((films) => renderList(films))\n//     .catch((error) => console.log(error));\n// }\n\n// markupPopular();\n","window.onload = function () {\n  document.body.classList.add('loaded_hiding');\n  window.setTimeout(function () {\n    document.body.classList.add('loaded');\n    document.body.classList.remove('loaded_hiding');\n  }, 500);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","import renderList from './popular-films';\nimport Notiflix from 'notiflix';\nimport { refs } from './refs';\nimport { API_KEY } from './api-service';\nimport { BASE_URL } from './api-service';\n\nconst inputElement = document.querySelector('input');\nconst btnElement = document.querySelector('button');\n\nclass ApiServise {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n  }\n\n  fetchPopularMovies() {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${this.page}`;\n    return fetch(url).then(response => response.json());\n  }\n  fetchMoviesByRequest() {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${this.searchQuery}&page=${this.page}&include_adult=false`;\n    return fetch(url).then(response => response.json());\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  clearInput() {\n    this.searchQuery.innerHTML = '';\n  }\n\n  pagination(el) {\n    this.page = el;\n  }\n}\n\nconst apiServise = new ApiServise();\n\nlet currentPage = 1;\nlet totalPages;\nconst pageRange = 2;\n\nbtnElement.addEventListener('click', onSearchForm);\n\nfunction onSearchForm(e) {\n  e.preventDefault();\n  apiServise.query = inputElement.value.trim();\n\n  if (apiServise.query.trim() === '') {\n    Notiflix.Notify.failure('Please enter the text in search field');\n    return;\n  }\n\n  clearGallery();\n  inputElement.value = '';\n  refs.pageList.innerHTML = '';\n  apiServise.resetPage();\n  currentPage = 1;\n  searchFetch();\n}\n\nfunction clearGallery() {\n  refs.gallery.innerHTML = '';\n}\n\nfunction searchFetch() {\n  apiServise\n    .fetchMoviesByRequest()\n    .then(data => {\n      console.log(data);\n      if (data.total_results == 0) {\n        Notiflix.Notify.failure(\n          '\"Sorry, there are no film with this name. Please try again.\"'\n        );\n        apiServise.query = '';\n        fetchGall();\n      }\n      totalPages = data.total_pages;\n      refs.lastBtn.textContent = totalPages;\n      // console.log(data)\n      renderList(data);\n      init();\n    })\n    .catch(error => console.log(error));\n}\n\nfunction fetchGall() {\n  apiServise\n    .fetchPopularMovies()\n    .then(data => {\n      totalPages = data.total_pages;\n      refs.lastBtn.textContent = totalPages;\n\n      init();\n      renderList(data);\n    })\n    .catch(error => console.log(error));\n}\n\nrefs.paginationList.addEventListener('click', onBtnClick);\nrefs.prevBtn.addEventListener('click', onPrevBtnClick);\nrefs.nextBtn.addEventListener('click', onNextBtnClick);\n\nfunction onBtnClick(evt) {\n  evt.preventDefault();\n\n  if (evt.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  refs.gallery.innerHTML = '';\n  refs.pageList.innerHTML = '';\n\n  currentPage = Number(evt.target.textContent);\n  apiServise.pagination(currentPage);\n\n  if (apiServise.query) {\n    searchFetch();\n  } else {\n    fetchGall();\n  }\n}\n\nfunction onPrevBtnClick(evt) {\n  evt.preventDefault();\n\n  if (currentPage > 1) {\n    currentPage -= 1;\n  }\n  refs.gallery.innerHTML = '';\n  refs.pageList.innerHTML = '';\n  apiServise.pagination(currentPage);\n\n  if (apiServise.query) {\n    searchFetch();\n  } else {\n    fetchGall();\n  }\n}\n\nfunction onNextBtnClick(evt) {\n  evt.preventDefault();\n\n  if (currentPage !== totalPages) {\n    currentPage += 1;\n  }\n  refs.gallery.innerHTML = '';\n  refs.pageList.innerHTML = '';\n  apiServise.pagination(currentPage);\n\n  if (apiServise.query) {\n    searchFetch();\n  } else {\n    fetchGall();\n  }\n}\n\nfunction renderPagesList() {\n  const start = currentPage - pageRange;\n  const end = currentPage + pageRange;\n\n  for (let i = start; i <= end; i += 1) {\n    if (i > 0 && i <= totalPages) {\n      refs.pageList.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pages-item\"><button type=\"button\" class=\"pagination-btn\">${i}</button></li>`\n      );\n    }\n  }\n}\n\nfunction hideFirstLastBtn() {\n  currentPage < 4\n    ? (refs.firstPage.hidden = true)\n    : (refs.firstPage.hidden = false);\n  currentPage > totalPages - 3\n    ? (refs.lastPage.hidden = true)\n    : (refs.lastPage.hidden = false);\n}\n\nfunction checkBtnOpacity() {\n  currentPage === 1\n    ? (refs.prevBtn.disabled = true)\n    : (refs.prevBtn.disabled = false);\n  currentPage === totalPages\n    ? (refs.nextBtn.disabled = true)\n    : (refs.nextBtn.disabled = false);\n}\n\nfunction makeActiveBtn() {\n  let pagesMenu = refs.pageList.querySelectorAll('button');\n  for (let i = 0; i < pagesMenu.length; i += 1) {\n    if (Number(pagesMenu[i].textContent) === currentPage) {\n      pagesMenu[i].classList.add('active-btn');\n    }\n  }\n}\n\nfunction init() {\n  checkBtnOpacity();\n  hideFirstLastBtn();\n  renderPagesList();\n  makeActiveBtn();\n}\n\napiServise.pagination(currentPage);\nfetchGall();\n"],"names":["$93b3c371a234ec36$var$genreIdArr","$93b3c371a234ec36$var$cardList","document","querySelector","$93b3c371a234ec36$export$2e2bcd8739ae039","films","results","map","film","yearRelease","Date","release_date","getFullYear","genres","genre_ids","genreName","forEach","genre_id","push","find","genre","id","name","$93b3c371a234ec36$var$getGenre","innerHTML","concat","poster_path","original_title","fetch","then","responce","ok","Error","statusText","json","genreId","catch","error","console","log","window","onload","body","classList","add","setTimeout","remove","Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$dfaf77c789ce7a24$var$totalPages","$dfaf77c789ce7a24$var$inputElement","$dfaf77c789ce7a24$var$btnElement","$dfaf77c789ce7a24$var$apiServise","ApiServise","this","page","searchQuery","url","$1h2Gi","BASE_URL","API_KEY","response","newQuery","el","$dfaf77c789ce7a24$var$currentPage","$dfaf77c789ce7a24$var$searchFetch","fetchMoviesByRequest","data","total_results","$parcel$interopDefault","$iU1Pc","Notify","failure","query","$dfaf77c789ce7a24$var$fetchGall","total_pages","$4Nugj","refs","lastBtn","textContent","$dfaf77c789ce7a24$var$init","fetchPopularMovies","prevBtn","disabled","nextBtn","firstPage","hidden","lastPage","end","pageList","insertAdjacentHTML","$dfaf77c789ce7a24$var$renderPagesList","pagesMenu","querySelectorAll","Number","$dfaf77c789ce7a24$var$makeActiveBtn","addEventListener","e","preventDefault","trim","gallery","resetPage","paginationList","evt","nodeName","pagination"],"version":3,"file":"index.bf062068.js.map"}