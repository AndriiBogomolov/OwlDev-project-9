{"mappings":"AAAA,MAAMA,EAAO,CACXC,gBAAiBC,SAASC,cAAc,iCACxCC,iBAAkBF,SAASC,cAAc,kCACzCE,oBAAqBH,SAASC,cAAc,iBAI9BH,EAAXC,gBAAgBK,iBAAiB,SAEtC,WACEN,EAAKK,oBAAoBE,UAAUC,OAAO,kB,IAG5CR,EAAKI,iBAAiBE,iBAAiB,SAEvC,WACEN,EAAKK,oBAAoBE,UAAUE,IAAI,kB,IChBzC,MAAMC,EAAWR,SAASC,cAAc,SAwCxC,SAASQ,EAAWC,GAClBA,EAAMC,QAAQC,KAAIC,IAChB,IACIC,EADO,IAAIC,KAAKF,EAAKG,cACFC,cACvBC,UAAUL,EAAKK,UAEf,IAAIC,EA/BR,SAAkBD,GAChB,IAAIE,EAAY,GAIf,OAHDF,EAAUG,SAAQC,IAChBF,EAAUG,KAAKC,WAAWC,MAAKC,GAASA,EAAMC,KAAOL,IAAUM,KAAK,IAE9DR,C,CA0BOS,CAASX,WAEtB,OAAQV,EAASsB,WAAa,6FAE0BjB,EAAKc,gBAAgBd,EAAKc,kUAInBd,EAAKkB,mPAMxBlB,EAAKmB,oEACPb,OAAYL,kFAGpC,G,CAzDZmB,MAHO,yGAGSC,MAAKC,IAC3B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE5B,OAAOH,EAASI,MAAM,IAYXL,MAAKM,IACjBhB,WAAagB,EAAQrB,MAAM,IAG1BsB,OAAMC,GAASC,QAAQC,IAAIF,KAKrBT,MA9BP,4FA8BkBC,MAAKC,IACrB,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,MAAM,IAkCrBL,MAAKxB,GAASD,EAAWC,KACzB+B,OAAMC,GAASC,QAAQC,IAAIF,KCrEzBG,eAAeC,EAAkBC,GACtC,MAAMC,QAAiBf,MACrB,sCAAqBc,8CAEvB,IAAKC,EAASZ,GACZ,MAAM,IAAIC,MAAMW,EAASC,QAE3B,aAAaD,EAAST,M,CCPxB,MAAMW,EAAYlD,SAASC,cAAc,SACnCkD,EAAWnD,SAASC,cAAc,aAClCmD,EAAcpD,SAASC,cAAc,iBAgC3C,SAASoD,IACPF,EAAS9C,UAAUE,IAAI,aACvBP,SAASsD,KAAKC,MAAMC,SAAW,S,CASjC,SAASC,EAAWC,GACH,WAAXA,EAAEC,OACJ3D,SAAS4D,oBAAoB,UAAWH,GACxCJ,I,CA5CJH,EAAU9C,iBAAiB,SAI3B,SAA2BsD,GACzB,IAAKA,EAAEG,OAAOC,QAAQ,MACpB,OACK,GAAIJ,EAAEG,OAAOC,QAAQ,MAAO,CACjC,MAAMf,EAAUW,EAAEG,OAAOC,QAAQ,MAAMC,QAAQpC,GACzCqC,EAAchE,SAASC,cAAc,gBACvC+D,GACFA,EAAY1D,SAGdwC,EAAkBC,GACfb,MAAK+B,IACJC,iBAAiBD,GACIjE,SAASC,cAC5B,+BAEWG,iBAAiB,QAAS+D,WAAW,IAEnD1B,OAAMC,GAASC,QAAQC,IAAIF,KAE9B1C,SAASsD,KAAKC,MAAMC,SAAW,SAC/BL,EAAS9C,UAAUC,OAAO,aAC1BN,SAASI,iBAAiB,UAAWqD,E,KAzBzCL,EAAYhD,iBAAiB,QAASiD,GACtCF,EAAS/C,iBAAiB,SAiC1B,SAAyBsD,GACnBA,EAAEU,gBAAkBV,EAAEG,QACxBR,G","sources":["src/js/footer-modal.js","src/js/popular-films.js","src/js/fetchMovieDetails.js","src/js/modal_film.js"],"sourcesContent":["const refs = {\n  openFooterModal: document.querySelector('[data-action=\"open-lightbox\"]'),\n  closeFooterModal: document.querySelector('[data-action=\"close-lightbox\"]'),\n  lightboxFooterModal: document.querySelector('.js-lightbox'),\n};\n\n//------------------відкриття модалки--------------------------\nrefs.openFooterModal.addEventListener('click', onOpenModal);\n\nfunction onOpenModal() {\n  refs.lightboxFooterModal.classList.remove('visually-hidden');\n}\n//-----------------закриття модалки через кнопку----------------\nrefs.closeFooterModal.addEventListener('click', onCloseModal);\n\nfunction onCloseModal() {\n  refs.lightboxFooterModal.classList.add('visually-hidden');\n}\n","const cardList = document.querySelector('.card');\nconst URL =\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=177f83f5259c7f846e561f4715bd03a4';\n\nconst URLgenre = 'https://api.themoviedb.org/3/genre/movie/list?api_key=177f83f5259c7f846e561f4715bd03a4&language=en-US';\n\nfunction fetchGenres() {\n   return fetch(URLgenre).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n   return responce.json();\n   })\n}\n\nfunction getGenre(genre_ids) { \n  let genreName = [];\n  genre_ids.forEach(genre_id => { \n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  })\n   return genreName;\n}\n\nfetchGenres().then(genreId => {\n  genreIdArr = genreId.genres;\n  //console.log(genreIdArr)\n  })\n  .catch(error => console.log(error));\n\n\n\nfunction fetchPopular() {\n  return fetch(URL).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nfunction renderList(films) {\n  films.results.map(film => {\n    let year = new Date(film.release_date);\n    let yearRelease = year.getFullYear();\n    genre_ids=film.genre_ids\n   \n    let genres = getGenre(genre_ids);\n   \n    return (cardList.innerHTML += `<li class=\"card__item item\">\n\n                  <a class=\"card__link link\" href=\"#\" id=\"${film.id}\" data-id=\"${film.id}\" data-film-open>\n                    <div class=\"card__thumb\">\n                      <img class=\"card__img\"                      \n                        sizes=\"(min-width: 1200px) 370px, (min-width: 768px) 354px, (max-width: 767px) 450px, 100vw\"\n                        src='https://www.themoviedb.org/t/p/w500/${film.poster_path}'\n                        alt=\"tehnocryak\"\n                        width=\"100%\"\n                      />\n                    </div>\n                    <div class=\"card__meta\">\n                      <h2 class=\"card__title\">${film.original_title}</h2>\n                      <p class=\"card__info\">${genres} | ${yearRelease}</p>\n                    </div>\n                  </a>\n                </li>`);\n  });\n}\n\nfunction markupPopular() {\n  fetchPopular()\n    .then(films => renderList(films))\n    .catch(error => console.log(error));\n}\n\n\nmarkupPopular();\n\n\n\n\n","import { API_KEY, BASE_URL } from './api-service';\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n","import { fetchMovieDetails } from './fetchMovieDetails';\n\nconst movieList = document.querySelector('.card');\nconst backdrop = document.querySelector('.backdrop');\nconst closeButton = document.querySelector('.close-button');\n \nmovieList.addEventListener('click', onModalWindowOpen);\ncloseButton.addEventListener('click', onModalWindowClose);\nbackdrop.addEventListener('click', onBackdropClick);\n\nfunction onModalWindowOpen(e) {\n  if (!e.target.closest('li')) {\n    return;\n  } else if (e.target.closest('li')) {\n    const movieId = e.target.closest('li').dataset.id;\n    const information = document.querySelector('.information');\n    if (information) {\n      information.remove();\n    }\n\n    fetchMovieDetails(movieId)\n      .then(movie => {\n        renderMovieModal(movie);\n        const modalButtons = document.querySelector(\n          '[data-name=\"modal-wrapper\"]'\n        );\n        modalButtons.addEventListener('click', onAddMovie);\n      })\n      .catch(error => console.log(error));\n\n    document.body.style.overflow = 'hidden';\n    backdrop.classList.remove('is-hidden');\n    document.addEventListener('keydown', onEscClose);\n  }\n}\n\nfunction onModalWindowClose() {\n  backdrop.classList.add('is-hidden');\n  document.body.style.overflow = 'visible';\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onModalWindowClose();\n  }\n}\n\nfunction onEscClose(e) {\n  if (e.code === 'Escape') {\n    document.removeEventListener('keydown', onEscClose);\n    onModalWindowClose();\n  }\n}\n\nexport { onModalWindowOpen, onModalWindowClose, onBackdropClick, onEscClose };\n"],"names":["$4e12c0f0297ad96a$var$refs","openFooterModal","document","querySelector","closeFooterModal","lightboxFooterModal","addEventListener","classList","remove","add","$ed081d1e17bb4577$var$cardList","$ed081d1e17bb4577$var$renderList","films","results","map","film","yearRelease","Date","release_date","getFullYear","genre_ids","genres","genreName","forEach","genre_id","push","genreIdArr","find","genre","id","name","$ed081d1e17bb4577$var$getGenre","innerHTML","poster_path","original_title","fetch","then","responce","ok","Error","statusText","json","genreId","catch","error","console","log","async","$9d0f9802ac62ed69$export$a199ce1860fbd5cd","movieId","response","status","$08d119c81b5e7d0e$var$movieList","$08d119c81b5e7d0e$var$backdrop","$08d119c81b5e7d0e$var$closeButton","$08d119c81b5e7d0e$export$518d3e6effb6482","body","style","overflow","$08d119c81b5e7d0e$export$1dcae825a987e74e","e","code","removeEventListener","target","closest","dataset","information","movie","renderMovieModal","onAddMovie","currentTarget"],"version":3,"file":"index.9796f9e5.js.map"}